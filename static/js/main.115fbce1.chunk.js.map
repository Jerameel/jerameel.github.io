{"version":3,"sources":["utils/Theme.ts","utils/styled.ts","components/base/Text/Text.style.ts","components/base/Text/Text.view.tsx","components/base/Button/Button.style.ts","components/base/Button/Button.view.tsx","components/base/SVG/Medium.tsx","components/base/SVG/Github.tsx","components/base/SVG/Logo.tsx","components/module/Header/Header.style.ts","components/module/Header/Header.view.tsx","routes/Landing/Landing.style.ts","routes/Landing/Landing.view.tsx","routes/Landing/Landing.container.tsx","routes/index.tsx","store/actions/auth.ts","utils/Redux.ts","store/actions/login.ts","store/reducers/auth.ts","store/reducers/login.ts","store/reducers/index.ts","store/index.ts","consts/index.ts","utils/Token.ts","services/auth.ts","store/sagas/login.ts","store/sagas/index.ts","locales/i18n.ts","serviceWorker.ts","index.tsx"],"names":["useTheme","useThemeBase","pxToRem","n","theme","brand","primary","secondary","info","success","warning","error","neutral","shade1","shade2","shade3","shade4","shade5","shade6","shade7","shade8","shade9","shade10","shade11","shade12","shade13","styled","styles","title","subtitle","body","label","caption","weights","fontWeights","P","p","variant","weight","color","align","React","memo","component","props","Component","withComponent","backgroundColor","default","disabled","Wrapper","div","takeFullWidth","BackgroundLayer","ButtonContainer","button","AnimatedButtonContainer","LoadingContainer","IconContainer","hasText","iconPosition","ButtonText","Text","Button","loading","icon","text","buttonProps","length","isDefault","BaseButton","textColor","loadingColor","size","Medium","width","height","fill","xmlns","viewBox","d","Github","aria-hidden","style","msTransform","WebkitTransform","transform","Logo","shapeRendering","Container","Content","className","Banner","LandingView","onClick","window","open","Landing","generatedProps","RoutesComponent","exact","path","updateAction","namespace","type","update","payload","UPDATE","createUpdateAction","clearAction","clear","CLEAR","createClearAction","authActions","asyncAction","requestType","successType","failedType","request","meta","failed","REQUEST","SUCCESS","FAILED","createAsyncAction","loginActions","DEFAULT_STATE","token","DEFAULT_ACTION","createAsyncReducer","customEventsHandler","pending","data","state","action","pathOr","combineReducers","auth","login","persistConfig","key","storage","whitelist","reducer","persistReducer","reducers","sagaMiddleware","createSagaMiddleware","enhancer","applyMiddleware","store","createStore","API","URL","process","REACT_APP_API_URL","VERSION","REACT_APP_API_VERSION","createBasicToken","credentials","str","email","password","Buffer","from","toString","BASE_URL","AUTH_URL","axios","method","url","headers","Authorization","loginRequest","loginSuccess","loginFailed","loginWatcher","call","put","message","takeLatest","root","sagas","all","map","fork","translationsJson","en","translation","translations","i18next","use","initReactI18next","LanguageDetector","init","resources","lng","debug","convertLanguageJsonToObject","obj","dict","current","Object","keys","forEach","currentLookupKey","Boolean","location","hostname","match","run","App","callback","onRehydate","a","StrictMode","persistor","persistStore","undefined","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"0RAGaA,EAAW,kBAAaC,eAGxBC,EAAU,SAACC,GAAD,gBAA0BA,EAD1B,GACA,QA6BRC,EA3Ba,CAC1BC,MAAO,CACLC,QAAS,UACTC,UAAW,OACXC,KAAM,UACNC,QAAS,UACTC,QAAS,UACTC,MAAO,WAGTC,QAAS,CACPC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,OAAQ,UACRC,QAAS,UACTC,QAAS,UACTC,QAAS,UACTC,QAAS,Y,OC5BEC,E,MAAf,E,4JCEA,IAAMC,EAAmC,CACvCC,MAAM,wBAAD,OACc1B,EAAQ,IADtB,uCAIL2B,SAAS,wBAAD,OACW3B,EAAQ,IADnB,WAGR4B,KAAK,wBAAD,OACe5B,EAAQ,IADvB,WAGJ6B,MAAM,wBAAD,OACc7B,EAAQ,IADtB,+EAKL8B,QAAQ,wBAAD,OACY9B,EAAQ,IADpB,sDAOH+B,EAKE,MAGFC,EAAsC,CAC1CN,MAAOK,EACPJ,SARS,MASTC,KAVO,MAWPC,MAAOE,EACPD,QAVQ,OAaGG,EAAIT,EAAOU,EAAV,KACV,gBAAGC,EAAH,EAAGA,QAAH,OAAiBV,EAAOU,GAAW,WACtB,gBAAGA,EAAH,EAAGA,QAAH,SAAYC,QACfJ,EAAYG,GAAW,WAC1B,gBAAGjC,EAAH,EAAGA,MAAH,IAAUmC,aAAV,MAAkB,UAAlB,SACN,2BAAKnC,EAAMQ,SAAYR,EAAMC,OAAQkC,MAC1B,qBAAGC,OAAqB,UCtCzBC,MAAMC,MAPR,SAAC,GAAqD,IAAnDC,EAAkD,EAAlDA,UAAcC,EAAoC,6BAE1DC,EAAYF,EAAYR,EAAEW,cAAcH,GAAaR,EAE3D,OAAO,kBAACU,EAAcD,M,uzCCHxB,IAAMG,EAA4C,CAChDC,QAAS5C,EAAMQ,QAAQa,QACvBwB,SAAU7C,EAAMQ,QAAQM,OACxBT,QAASL,EAAMC,MAAMI,SAGVyC,EAAUxB,EAAOyB,IAAV,KAMT,SAACP,GAAD,OAAYA,EAAMQ,cAAgB,OAAS,UAGzCC,EAAkB3B,EAAOyB,IAAV,KAKN,gBAAGd,EAAH,EAAGA,QAAH,OAAiBU,EAAgBV,MAG1CiB,EAAkB5B,EAAO6B,OAAV,KAqBfC,EAA0B9B,EAAO4B,EAAP5B,CAAH,KAMvB+B,EAAmB/B,EAAOyB,IAAV,KAOhBO,EAAgBhC,EAAOyB,IAAV,KAMT,SAACP,GAAD,OACbA,EAAMe,SAAkC,UAAvBf,EAAMgB,aAA2B,MAAQ,OAC5C,SAAChB,GAAD,OACdA,EAAMe,SAAkC,WAAvBf,EAAMgB,aAA4B,MAAQ,OAGlDC,EAAanC,EAAOoC,EAAPpC,CAAH,KCDRqC,EA1DA,SAACnB,GACd,IAAMxC,EAAQJ,IAEZgE,EAQEpB,EARFoB,QACAC,EAOErB,EAPFqB,KACAC,EAMEtB,EANFsB,KACA3B,EAKEK,EALFL,MANgD,EAW9CK,EAJFgB,oBAPgD,MAOjC,QAPiC,IAW9ChB,EAHFP,eARgD,MAQtC,UARsC,IAW9CO,EAFFQ,qBATgD,SAU7Ce,EAV6C,YAW9CvB,EAX8C,4EAa5Ce,KAAUO,IAAY,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAME,QAAS,GAEjCC,EAAwB,YAAZhC,EACZiC,EAAaD,EAAYb,EAA0BF,EAErDiB,EAA2D,UAC3DC,EAAepE,EAAMQ,QAAQa,QAOjC,OALI4C,IACFE,EAAY,SACZC,EAAepE,EAAMQ,QAAQC,QAI7B,kBAACqC,EAAD,CAASE,cAAeA,GACtB,kBAACC,EAAD,CAAiBhB,QAASA,GACxB,kBAACiC,EAAD,eAAY/B,MAAOA,GAAW4B,GACV,WAAjBP,GACC,kBAACF,EAAD,CAAeC,QAASA,EAASC,aAAcA,GAC5CK,GAIJC,GACC,kBAACL,EAAD,CAAYxB,QAAQ,UAAUE,MAAOgC,GAClCL,GAGJF,GACC,kBAACP,EAAD,KACE,kBAAC,IAAD,CAAYgB,KAAM,GAAIlC,MAAOiC,KAIf,UAAjBZ,IAA6BI,GAC5B,kBAACN,EAAD,CAAeC,QAASA,EAASC,aAAcA,GAC5CK,OCpCAS,EAvBA,SAAC9B,GAAiC,IAEvC+B,EAAwB/B,EAAxB+B,MAAOC,EAAiBhC,EAAjBgC,OAAQC,EAASjC,EAATiC,KAIvB,OACE,uCACEC,MAAM,6BACNH,MAAOA,GAAS,KAChBC,OAAQA,GAAU,KAClBG,QAAQ,iBACJnC,GAEJ,0BACEoC,EAAE,gcACFH,KAAMA,GAAQ,YAEhB,0BAAMA,KAAK,mBAAmBG,EAAE,wBCSvBC,EA3BA,SAACrC,GAAiC,IAEvC+B,EAAwB/B,EAAxB+B,MAAOC,EAAiBhC,EAAjBgC,OAAQC,EAASjC,EAATiC,KAIvB,OACE,uCACEK,cAAY,OACZP,MAAOA,GAAS,MAChBC,OAAQA,GAAU,MAClBO,MAAO,CACLC,YAAa,iBACbC,gBAAiB,kBAEnBN,QAAQ,gBACRO,UAAU,eACN1C,GAEJ,0BACEoC,EAAE,6oBACFH,KAAMA,GAAQ,cCQPU,EA7BF,SAAC3C,GAAiC,IAErC+B,EAAkB/B,EAAlB+B,MAAOC,EAAWhC,EAAXgC,OAIf,OACE,uCACEE,MAAM,6BACNH,MAAOA,GAAS,IAChBC,OAAQA,GAAU,IAClBG,QAAQ,sBACRS,eAAe,cACX5C,GAEJ,0BAAMiC,KAAK,UAAUG,EAAE,4BACvB,0BAAMA,EAAE,+CAA+CH,KAAK,SAC5D,0BAAMG,EAAE,0CAA0CH,KAAK,SACvD,0BAAMG,EAAE,0CAA0CH,KAAK,YACvD,uBAAGA,KAAK,QACN,0BAAMG,EAAE,4JAEV,uBAAGH,KAAK,WACN,0BAAMG,EAAE,2F,qqBC3BT,IAAMS,EAAY/D,EAAOyB,IAAV,KAOA,qBAAG/C,MAAkBC,MAAMC,WAGpCoF,EAAUhE,EAAOyB,IAAV,KCSLV,MAAMC,MAbN,SAACE,GACd,IAAMxC,EAAQJ,IACd,OACE,kBAACyF,EAAD,KACE,kBAACC,EAAD,KACE,yBAAKC,UAAU,kBACb,kBAAC,EAAD,CAAMhB,MAAO,GAAIC,OAAQ,GAAIC,KAAMzE,EAAMQ,QAAQC,e,49BCZpD,IAAM4E,GAAY/D,EAAOyB,IAAV,MACA,qBAAG/C,MAAkBQ,QAAQC,UAGtC6E,GAAUhE,EAAOyB,IAAV,MASPyC,GAASlE,EAAOyB,IAAV,MCsCJ0C,GA1CK,SAACjD,GACnB,IAAMxC,EAAQJ,IACd,OACE,kBAAC,GAAD,KACE,kBAAC,EAAD,MACA,kBAAC,GAAD,KACE,kBAAC4F,GAAD,KACE,kBAAC,EAAD,CAAMjB,MAAM,OAAOC,OAAQ,IAAKC,KAAMzE,EAAMQ,QAAQa,UACpD,yBAAKkE,UAAU,mBACb,kBAAC,EAAD,CAAMtD,QAAQ,SAAd,4BAEF,yBAAKsD,UAAU,yBACb,kBAAC,EAAD,CAAMtD,QAAQ,QAAd,yDAIF,yBAAKsD,UAAU,WACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CACEzB,KAAK,SACLD,KAAM,kBAAC,EAAD,CAAQY,KAAK,OAAOD,OAAQ,GAAID,MAAO,KAC7CmB,QAAS,kBACPC,OAAOC,KAAK,8BAA+B,aAIjD,yBAAKL,UAAU,0BACb,kBAAC,EAAD,CACEzB,KAAK,SACLD,KAAM,kBAAC,EAAD,CAAQY,KAAK,OAAOD,OAAQ,GAAID,MAAO,KAC7CmB,QAAS,kBACPC,OAAOC,KAAK,8BAA+B,kBC/B9CC,GAPC,WACd,IAAMC,EAAiB,GAGvB,OAAO,kBAAC,GAAgBA,ICMXC,GARS,WACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAI1D,UAAWsD,O,yECLjCK,GCW4B,SAAgBC,GAChD,IAAMC,EAAI,UAAMD,EAAN,WACV,MAAO,CACLE,OAAQ,SAACC,GAAD,MAAuB,CAC7BF,OACAE,YAEFC,OAAQH,GDlBSI,CADV,QAELC,GCqB2B,SAACN,GAChC,IAAMC,EAAI,UAAMD,EAAN,UACV,MAAO,CACLO,MAAO,iBAAO,CACZN,OACAE,QAAS,KAEXK,MAAOP,GD5BSQ,CAFT,QASIC,GALE,2BACZX,IACAO,IELCK,GDiC2B,SAC/BX,GAEA,IAAMY,EAAW,UAAMZ,EAAN,YACXa,EAAW,UAAMb,EAAN,YACXc,EAAU,UAAMd,EAAN,WAChB,MAAO,CACLe,QAAS,SAACC,GAAD,MAAiB,CACxBf,KAAMW,EACNI,SAEF9G,QAAS,SAACiG,GAAD,MAAuB,CAC9BF,KAAMY,EACNV,YAEFc,OAAQ,SAAC7G,GAAD,MAAoB,CAC1B6F,KAAMa,EACN1G,UAEF8G,QAASN,EACTO,QAASN,EACTO,OAAQN,GCtDQO,CADT,SAOIC,GAJG,eACbX,ICDCY,GAA2B,CAC/BC,MAAO,MAGHC,GAAoC,CACxCxB,KAAM,GACNE,QAAS,CACPqB,MAAO,OCRIE,GH+DmB,WAEhCC,GAKI,IANFT,EAMC,EANDA,QAASC,EAMR,EANQA,QAASC,EAMjB,EANiBA,OAOdG,EAA2C,CAC/CnH,MAAO,GACPwH,QAAS,KACTb,QAAS,KACTc,KAAM,MAER,OAAO,WAG0B,IAAD,EAF9BC,EAE8B,uDAFKP,EACnCQ,EAC8B,uCAC9B,OAAOC,aAAOF,EAAO,CAACC,EAAO9B,MAAhB,iCACViB,EAAU,CACTW,KAAM,KACNzH,MAAO,GACPwH,SAAS,EACTb,QAASiB,aAAO,KAAM,CAAC,QAASD,KALvB,eAOVZ,EAPU,YAAC,eAQPW,GARM,IASTF,SAAS,EACTC,KAAMG,aAAO,KAAM,CAAC,WAAYD,MAVvB,eAYVX,EAZU,YAAC,eAaPU,GAbM,IAcTF,SAAS,EACTxH,MAAO4H,aAAO,gBAAiB,CAAC,SAAUD,MAfjC,GAiBPJ,EACAA,EAAoBG,EAAOC,EAAQR,GACnC,MGpGKG,CAA4CJ,ICA5CW,8BAAgB,CAC7BC,KFWa,WAAqD,IAAD,EAAnDJ,EAAmD,uDAA3CP,GAAeQ,EAA4B,uDAAnBN,GAC9C,OAAOO,aAAOF,EAAO,CAACC,EAAO9B,OAAhB,oBACVS,GAAYN,OADF,YAAC,eAEP0B,GACAC,EAAO5B,UAHD,eAKVO,GAAYF,MAAQ,IALV,KEXb2B,WCGIC,GAAgB,CACpBC,IAAK,OACLC,aACAC,UAAW,CAAC,OAAQ,YAGhBC,GAAUC,aAAeL,GAAeM,IACjCC,GAAiBC,eAExBC,GAAWC,2BAAgBH,IAEpBI,GAAyBC,uBACpCR,GAC4CK,I,6BCvBjCI,GAAM,CACjBC,IAAKC,mHAAYC,mBAAqB,wBACtCC,QAASF,mHAAYG,uBAAyB,M,SCMzC,SAASC,GAAiBC,GAC/B,MAAM,SAAN,QALoBC,EAKS,GAAD,OACvBD,EAAYE,MADW,YACFF,EAAYG,UAL/BC,UAAOC,KAAKJ,GAAKK,SAAS,YADnC,IAAsBL,ECCtB,IAAMM,GAAQ,UAAMd,GAAIC,IAAV,YAAiBD,GAAII,SAC7BW,GAAQ,UAAMD,GAAN,SAED5B,GAAQ,SAACN,GACpB,OAAOoC,KAAM,CACXC,OAAQ,OACRC,IAAI,GAAD,OAAKH,GAAL,UACHI,QAAS,CACPC,cAAed,GAAiB1B,IAElCA,KAAM,M,YCRAyC,I,YASAC,I,YAIAC,I,YAIAC,IAjBV,SAAUH,GAAavC,GAAvB,yEAEqB,OAFrB,kBAE2B2C,aAAKvC,GAAOJ,EAAOf,MAF9C,OAGI,OAHJ,SAEYa,EAFZ,EAEYA,KAFZ,SAGU8C,aAAIrD,GAAapH,QAAQ2H,IAHnC,8BAKI,OALJ,mCAKU8C,aAAIrD,GAAaL,OAAO,KAAE2D,UALpC,sDASA,SAAUL,GAAaxC,GAAvB,kGAIA,SAAUyC,GAAYzC,GAAtB,kGAIA,SAAU0C,KAAV,iEACE,OADF,SACQI,aAAWvD,GAAaJ,QAASoD,IADzC,OAEE,OAFF,SAEQO,aAAWvD,GAAaH,QAASoD,IAFzC,OAGE,OAHF,SAGQM,aAAWvD,GAAaF,OAAQoD,IAHxC,wCAMeC,U,YCxBUK,IAFnBC,GAAQ,CAAC5C,IAEA,SAAU2C,KAAV,iEACb,OADa,SACPE,aAAID,GAAME,IAAIC,OADP,wC,yCCETC,GAAmB,CACvBC,GAAI,CACFC,YAAaD,KAOJE,GAA2D,GAoBpDC,KAEjBC,IAAIC,MAGJD,IAAIE,MAGJC,KACC,CACEC,UAAWT,GACXU,IAAK,KACLC,OAAO3C,IAET,YA1BgC,SAA9B4C,EAA+BC,EAAUC,EAAWC,GACxDC,OAAOC,KAAKJ,GAAKK,SAAQ,SAAChE,GACxB,IAAMiE,EAAmBJ,EAAO,UAAMA,EAAN,YAAiB7D,GAAQA,EACjC,kBAAb2D,EAAI3D,IACb4D,EAAK5D,GAAO,GACZ0D,EAA4BC,EAAI3D,GAAM4D,EAAK5D,GAAMiE,IAEjDL,EAAK5D,GAAOiE,KAoBZP,CAA4BX,GAAIE,O,OCxClBiB,QACW,cAA7B/G,OAAOgH,SAASC,UAEe,UAA7BjH,OAAOgH,SAASC,UAEhBjH,OAAOgH,SAASC,SAASC,MACvB,2DCCN/D,GAAegE,IAAI5B,IAEnB,IAAM6B,GAAM,WACV,IRIwBC,EQJlBC,EAAU,uCAAG,sBAAAC,EAAA,0FAAH,qDAGhB,OACE,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAejE,MAAOA,IACpB,kBAAC,IAAD,CAAatF,QAAS,KAAMwJ,WRFVJ,EQE+BC,ERDvDI,aAAanE,QAAOoE,EAAWN,KQEvB,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAehN,MAAOA,GACpB,kBAAC,GAAD,YASduN,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SDgG3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAACC,GACLA,EAAaC,gBAEdC,OAAM,SAAC1N,GACN2N,QAAQ3N,MAAMA,EAAMwK,a","file":"static/js/main.115fbce1.chunk.js","sourcesContent":["import { useTheme as useThemeBase } from 'emotion-theming';\nimport { Theme } from 'types/Theme';\n\nexport const useTheme = (): Theme => useThemeBase();\n\nconst rootFontSizePx = 16;\nexport const pxToRem = (n: number): string => `${n / rootFontSizePx}rem`;\n\nexport const theme: Theme = {\n  brand: {\n    primary: '#1a1a1a',\n    secondary: '#fff',\n    info: '#1890ff',\n    success: '#52C41A',\n    warning: '#faad14',\n    error: '#ff4d4f',\n  },\n  // Ant Design Neutral Colors\n  neutral: {\n    shade1: '#ffffff',\n    shade2: '#fafafa',\n    shade3: '#f5f5f5',\n    shade4: '#f0f0f0',\n    shade5: '#d9d9d9',\n    shade6: '#bfbfbf',\n    shade7: '#8c8c8c',\n    shade8: '#595959',\n    shade9: '#434343',\n    shade10: '#262626',\n    shade11: '#1f1f1f',\n    shade12: '#141414',\n    shade13: '#000000',\n  },\n};\n\nexport default theme;\n","import styled, { CreateStyled } from '@emotion/styled';\nimport { Theme } from 'types/Theme';\n\nexport default styled as CreateStyled<Theme>;\n","import styled from 'utils/styled';\nimport { pxToRem } from 'utils/Theme';\n\nimport { Variants, TextProps } from './Text.props';\n\nconst styles: Record<Variants, string> = {\n  title: `\n        font-size: ${pxToRem(36)};\n        line-height: 40px;\n    `,\n  subtitle: `\n        font-size: ${pxToRem(18)};\n    `,\n  body: `\n        font-size: ${pxToRem(14)};\n    `,\n  label: `\n        font-size: ${pxToRem(12)};\n        letter-spacing: 2.5px;\n        text-transform: uppercase;\n    `,\n  caption: `\n        font-size: ${pxToRem(12)};\n        letter-spacing: 2.5px;\n        \n    `,\n};\n\nconst weights: Record<string, string> = {\n  Light: '300',\n  Regular: '400',\n  Medium: '500',\n  SemiBold: '600',\n  Bold: '700',\n};\n\nconst fontWeights: Record<string, string> = {\n  title: weights.Bold,\n  subtitle: weights.Regular,\n  body: weights.Light,\n  label: weights.Bold,\n  caption: weights.Medium,\n};\n\nexport const P = styled.p<TextProps>`\n  ${({ variant }) => styles[variant || 'body']};\n  font-weight: ${({ variant, weight }) =>\n    weight || fontWeights[variant || 'body']};\n  color: ${({ theme, color = 'shade13' }) =>\n    ({ ...theme.neutral, ...theme.brand }[color])};\n  text-align: ${({ align }) => align || 'left'};\n  margin: 0;\n`;\n","import React from 'react';\n\nimport { TextProps } from './Text.props';\nimport { P } from './Text.style';\n\nconst Text = ({ component, ...props }: TextProps): JSX.Element => {\n  //@ts-ignore\n  const Component = component ? P.withComponent(component) : P;\n\n  return <Component {...props} />;\n};\n\nexport default React.memo(Text);\n","import styled from 'utils/styled';\nimport theme from 'utils/Theme';\n\nimport Text from '../Text';\nimport { Variants } from './Button.props';\n\nconst backgroundColor: Record<Variants, string> = {\n  default: theme.neutral.shade13,\n  disabled: theme.neutral.shade6,\n  success: theme.brand.success,\n};\n\nexport const Wrapper = styled.div<{ takeFullWidth: boolean }>`\n  display: flex;\n  align-items: center;\n  border: 1px solid #00232977;\n  padding: 6px 6px;\n  margin 4px 4px;\n  width: ${(props) => (props.takeFullWidth ? '100%' : 'auto')};\n`;\n\nexport const BackgroundLayer = styled.div<{\n  variant: Variants;\n}>`\n  width: 100%;\n  max-height: 48px;\n  background-color: ${({ variant }) => backgroundColor[variant]};\n`;\n\nexport const ButtonContainer = styled.button`\n  max-height: 48px;\n  z-index: 999;\n  width: 100%;\n  padding: 18px 36px;\n  border: none;\n  display: flex;\n  flex-direction: row;\n  align-items: center;\n  justify-content: center;\n\n  :focus {\n    outline: none;\n  }\n\n  background: linear-gradient(to right, #262626, #262626);\n  background-repeat: no-repeat;\n  background-size: 0 100%;\n  transition: background-size 0.6s 0s;\n`;\n\nexport const AnimatedButtonContainer = styled(ButtonContainer)`\n  :hover {\n    background-size: 100% 100%;\n  }\n`;\n\nexport const LoadingContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-left: 8px;\n`;\n\nexport const IconContainer = styled.div<{\n  hasText: boolean;\n  iconPosition: 'before' | 'after';\n}>`\n  display: flex;\n  align-items: center;\n  margin-left: ${(props) =>\n    props.hasText && props.iconPosition === 'after' ? '8px' : '0'};\n  margin-right: ${(props) =>\n    props.hasText && props.iconPosition === 'before' ? '8px' : '0'};\n`;\n\nexport const ButtonText = styled(Text)`\n  text-transform: uppercase;\n`;\n","import React from 'react';\n\nimport PuffLoader from 'react-spinners/PuffLoader';\nimport { Theme } from 'types/Theme';\nimport { useTheme } from 'utils/Theme';\n\nimport { ButtonProps } from './Button.props';\nimport {\n  ButtonContainer,\n  AnimatedButtonContainer,\n  LoadingContainer,\n  IconContainer,\n  ButtonText,\n  BackgroundLayer,\n  Wrapper,\n} from './Button.style';\nconst Button = (props: ButtonProps): JSX.Element => {\n  const theme = useTheme();\n  const {\n    loading,\n    icon,\n    text,\n    color,\n    iconPosition = 'after',\n    variant = 'default',\n    takeFullWidth = false,\n    ...buttonProps\n  } = props;\n\n  const hasText = text && text?.length > 0 ? true : false;\n\n  const isDefault = variant === 'default';\n  const BaseButton = isDefault ? AnimatedButtonContainer : ButtonContainer;\n\n  let textColor: keyof Theme['brand'] | keyof Theme['neutral'] = 'shade13';\n  let loadingColor = theme.neutral.shade13;\n\n  if (isDefault) {\n    textColor = 'shade1';\n    loadingColor = theme.neutral.shade1;\n  }\n\n  return (\n    <Wrapper takeFullWidth={takeFullWidth}>\n      <BackgroundLayer variant={variant}>\n        <BaseButton color={color} {...buttonProps}>\n          {iconPosition === 'before' && (\n            <IconContainer hasText={hasText} iconPosition={iconPosition}>\n              {icon}\n            </IconContainer>\n          )}\n\n          {text && (\n            <ButtonText variant=\"caption\" color={textColor}>\n              {text}\n            </ButtonText>\n          )}\n          {loading && (\n            <LoadingContainer>\n              <PuffLoader size={24} color={loadingColor} />\n            </LoadingContainer>\n          )}\n\n          {iconPosition === 'after' && !loading && (\n            <IconContainer hasText={hasText} iconPosition={iconPosition}>\n              {icon}\n            </IconContainer>\n          )}\n        </BaseButton>\n      </BackgroundLayer>\n    </Wrapper>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\n// import { useTheme } from 'utils/Theme';\n\nimport { SVGProps } from './SVG.props';\n\nconst Medium = (props: SVGProps): JSX.Element => {\n  // const theme = useTheme();\n  const { width, height, fill } = props;\n\n  // Paste converted svg below\n  // https://react-svgr.com/playground/?typescript=true\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || 1024}\n      height={height || 1024}\n      viewBox=\"0 0 1024 1024\"\n      {...props}\n    >\n      <path\n        d=\"M880 112H144c-17.7 0-32 14.3-32 32v736c0 17.7 14.3 32 32 32h736c17.7 0 32-14.3 32-32V144c0-17.7-14.3-32-32-32zM768 317.7l-40.8 39.1c-3.6 2.7-5.3 7.1-4.6 11.4v287.7c-.7 4.4 1 8.8 4.6 11.4l40 39.1v8.7H566.4v-8.3l41.3-40.1c4.1-4.1 4.1-5.3 4.1-11.4V422.5l-115 291.6h-15.5L347.5 422.5V618c-1.2 8.2 1.7 16.5 7.5 22.4l53.8 65.1v8.7H256v-8.7l53.8-65.1a26.1 26.1 0 007-22.4V392c.7-6.3-1.7-12.4-6.5-16.7l-47.8-57.6V309H411l114.6 251.5 100.9-251.3H768v8.5z\"\n        fill={fill || '#626262'}\n      />\n      <path fill=\"rgba(0, 0, 0, 0)\" d=\"M0 0h1024v1024H0z\" />\n    </svg>\n  );\n};\n\nexport default Medium;\n","import React from 'react';\n\n// import { useTheme } from 'utils/Theme';\n\nimport { SVGProps } from './SVG.props';\n\nconst Github = (props: SVGProps): JSX.Element => {\n  // const theme = useTheme();\n  const { width, height, fill } = props;\n\n  // Paste converted svg below\n  // https://react-svgr.com/playground/?typescript=true\n  return (\n    <svg\n      aria-hidden=\"true\"\n      width={width || '1em'}\n      height={height || '1em'}\n      style={{\n        msTransform: 'rotate(360deg)',\n        WebkitTransform: 'rotate(360deg)',\n      }}\n      viewBox=\"0 0 1024 1024\"\n      transform=\"rotate(360)\"\n      {...props}\n    >\n      <path\n        d=\"M511.6 76.3C264.3 76.2 64 276.4 64 523.5 64 718.9 189.3 885 363.8 946c23.5 5.9 19.9-10.8 19.9-22.2v-77.5c-135.7 15.9-141.2-73.9-150.3-88.9C215 726 171.5 718 184.5 703c30.9-15.9 62.4 4 98.9 57.9 26.4 39.1 77.9 32.5 104 26 5.7-23.5 17.9-44.5 34.7-60.8-140.6-25.2-199.2-111-199.2-213 0-49.5 16.3-95 48.3-131.7-20.4-60.5 1.9-112.3 4.9-120 58.1-5.2 118.5 41.6 123.2 45.3 33-8.9 70.7-13.6 112.9-13.6 42.4 0 80.2 4.9 113.5 13.9 11.3-8.6 67.3-48.8 121.3-43.9 2.9 7.7 24.7 58.3 5.5 118 32.4 36.8 48.9 82.7 48.9 132.3 0 102.2-59 188.1-200 212.9a127.5 127.5 0 0138.1 91v112.5c.8 9 0 17.9 15 17.9 177.1-59.7 304.6-227 304.6-424.1 0-247.2-200.4-447.3-447.5-447.3z\"\n        fill={fill || '#626262'}\n      />\n    </svg>\n  );\n};\n\nexport default Github;\n","import React from 'react';\n\n// import { useTheme } from 'utils/Theme';\n\nimport { SVGProps } from './SVG.props';\n\nconst Logo = (props: SVGProps): JSX.Element => {\n  // const theme = useTheme();\n  const { width, height } = props;\n\n  // Paste converted svg below\n  // https://react-svgr.com/playground/?typescript=true\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width || 512}\n      height={height || 512}\n      viewBox=\"0 0 135.467 135.467\"\n      shapeRendering=\"crispEdges\"\n      {...props}\n    >\n      <path fill=\"#1a1a1a\" d=\"M0 0h135.467v135.467H0z\" />\n      <path d=\"M127 127h8.467v8.467H127zM0 8.467h8.467V0H0z\" fill=\"#fff\" />\n      <path d=\"M0 0l8.467 8.467H127V127l8.467 8.467V0z\" fill=\"#fff\" />\n      <path d=\"M0 0l8.467 8.467V127H127l8.467 8.467H0z\" fill=\"#ececec\" />\n      <g fill=\"#fff\">\n        <path d=\"M76.2 33.867v8.466h16.933v50.8h8.467V33.867zM16.933 84.667v8.466h25.4V33.867h-8.466v50.8zM50.8 33.867v8.466L71.967 63.5 50.8 84.667v8.466L80.433 63.5z\" />\n      </g>\n      <g fill=\"#f2f2f2\">\n        <path d=\"M93.133 42.333l8.467-8.466v59.266h-8.467zM76.2 59.267l-25.4 25.4v8.466L80.433 63.5z\" />\n      </g>\n    </svg>\n  );\n};\n\nexport default Logo;\n","import styled from 'utils/styled';\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  height: 60px;\n  padding-left: 20px;\n  padding-right: 20px;\n  align-items: center;\n  background-color: ${({ theme }) => theme.brand.primary};\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  flex: 1;\n  align-items: center;\n  @media (min-width: 701px) {\n    max-width: 800px;\n  }\n  @media (min-width: 401px) and (max-width: 700px) {\n    max-width: 400px;\n  }\n\n  .logo-container {\n    width: 48px;\n    height: 48px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n`;\n","import React from 'react';\n\nimport { Logo } from 'components/base/SVG';\nimport { useTheme } from 'utils/Theme';\n\nimport { HeaderProps } from './Header.props';\nimport { Container, Content } from './Header.style';\n\nconst Header = (props: HeaderProps): JSX.Element => {\n  const theme = useTheme();\n  return (\n    <Container>\n      <Content>\n        <div className=\"logo-container\">\n          <Logo width={48} height={48} fill={theme.neutral.shade1} />\n        </div>\n      </Content>\n    </Container>\n  );\n};\n\nexport default React.memo(Header);\n","import styled from 'utils/styled';\n\nexport const Container = styled.div`\n  background-color: ${({ theme }) => theme.neutral.shade1};\n`;\n\nexport const Content = styled.div`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  padding-left: 20px;\n  padding-right: 20px;\n  align-items: center;\n`;\n\nexport const Banner = styled.div`\n  display: flex;\n  flex-direction: column;\n  min-height: calc(100vh - 60px);\n  padding-top: 96px;\n  width: 100%;\n  align-items: center;\n  @media (min-width: 701px) {\n    max-width: 800px;\n  }\n  @media (min-width: 401px) and (max-width: 700px) {\n    max-width: 400px;\n  }\n\n  .title-container {\n    margin-top: 40px;\n    p {\n      text-align: center;\n    }\n  }\n\n  .description-container {\n    margin-top: 16px;\n    p {\n      text-align: center;\n    }\n  }\n\n  .buttons {\n    margin-top: 64px;\n  }\n\n  .button-container {\n  }\n\n  .other-button-container {\n    margin-top: 8px;\n  }\n`;\n","import React from 'react';\n\nimport Button from 'components/base/Button';\nimport { Logo, Github, Medium } from 'components/base/SVG';\nimport Text from 'components/base/Text';\nimport Header from 'components/module/Header';\nimport { useTheme } from 'utils/Theme';\n\nimport { LandingGeneratedProps } from './Landing.props';\nimport { Container, Content, Banner } from './Landing.style';\n\nconst LandingView = (props: LandingGeneratedProps) => {\n  const theme = useTheme();\n  return (\n    <Container>\n      <Header />\n      <Content>\n        <Banner>\n          <Logo width=\"auto\" height={100} fill={theme.neutral.shade13} />\n          <div className=\"title-container\">\n            <Text variant=\"title\">Jerameel Delos&nbsp;Reyes</Text>\n          </div>\n          <div className=\"description-container\">\n            <Text variant=\"body\">\n              An Electronics&nbsp;Engineer and Software&nbsp;Developer\n            </Text>\n          </div>\n          <div className=\"buttons\">\n            <div className=\"button-container\">\n              <Button\n                text=\"Github\"\n                icon={<Github fill=\"#fff\" height={32} width={32} />}\n                onClick={() =>\n                  window.open('https://github.com/jerameel', '_self')\n                }\n              />\n            </div>\n            <div className=\"other-button-container\">\n              <Button\n                text=\"Medium\"\n                icon={<Medium fill=\"#fff\" height={32} width={32} />}\n                onClick={() =>\n                  window.open('https://jerameel.medium.com', '_self')\n                }\n              />\n            </div>\n          </div>\n        </Banner>\n      </Content>\n    </Container>\n  );\n};\n\nexport default LandingView;\n","import React from 'react';\n\nimport LandingView from './Landing.view';\n\nconst Landing = (): JSX.Element => {\n  const generatedProps = {\n    // generated props here\n  };\n  return <LandingView {...generatedProps} />;\n};\n\nexport default Landing;\n","import React from 'react';\n\nimport { Route, Switch } from 'react-router-dom';\n\nimport Landing from './Landing';\n\nconst RoutesComponent = (): JSX.Element => {\n  return (\n    <Switch>\n      <Route exact path=\"/\" component={Landing} />\n    </Switch>\n  );\n};\n\nexport default RoutesComponent;\n","import { AuthState } from 'types/store/AuthState';\nimport { createUpdateAction, createClearAction } from 'utils/Redux';\n\nconst ns = 'AUTH';\nconst updateAction = createUpdateAction<AuthState>(ns);\nconst clearAction = createClearAction(ns);\n\nconst authActions = {\n  ...updateAction,\n  ...clearAction,\n};\n\nexport default authActions;\n","import pathOr from 'ramda/es/pathOr';\nimport { AsyncAction } from 'types/Action';\nimport { AsyncState } from 'types/AsyncState';\n\nexport const createSetAction = <Payload = any>(namespace: string) => {\n  const type = `${namespace}/SET`;\n  return {\n    set: (payload: Payload) => ({\n      type,\n      payload,\n    }),\n    SET: type,\n  };\n};\n\nexport const createUpdateAction = <Payload = any>(namespace: string) => {\n  const type = `${namespace}/UPDATE`;\n  return {\n    update: (payload: Payload) => ({\n      type,\n      payload,\n    }),\n    UPDATE: type,\n  };\n};\n\nexport const createClearAction = (namespace: string) => {\n  const type = `${namespace}/CLEAR`;\n  return {\n    clear: () => ({\n      type,\n      payload: {},\n    }),\n    CLEAR: type,\n  };\n};\n\nexport const createAsyncAction = <Meta = any, Payload = any>(\n  namespace: string\n) => {\n  const requestType = `${namespace}/REQUEST`;\n  const successType = `${namespace}/SUCCESS`;\n  const failedType = `${namespace}/FAILED`;\n  return {\n    request: (meta: Meta) => ({\n      type: requestType,\n      meta,\n    }),\n    success: (payload: Payload) => ({\n      type: successType,\n      payload,\n    }),\n    failed: (error: string) => ({\n      type: failedType,\n      error,\n    }),\n    REQUEST: requestType,\n    SUCCESS: successType,\n    FAILED: failedType,\n  };\n};\n\ntype AsyncActionTypes = {\n  REQUEST: string;\n  SUCCESS: string;\n  FAILED: string;\n};\n\nexport const createAsyncReducer = <Meta = any, Payload = any>(\n  { REQUEST, SUCCESS, FAILED }: AsyncActionTypes,\n  customEventsHandler?: (\n    state: AsyncState<Meta, Payload>,\n    action: AsyncAction<Meta, Payload>,\n    defaultState: AsyncState<Meta, Payload>\n  ) => Record<string, AsyncState<Meta, Payload>>\n) => {\n  const DEFAULT_STATE: AsyncState<Meta, Payload> = {\n    error: '',\n    pending: null,\n    request: null,\n    data: null,\n  };\n  return (\n    state: AsyncState<Meta, Payload> = DEFAULT_STATE,\n    action: AsyncAction<Meta, Payload>\n  ): AsyncState<Meta, Payload> => {\n    return pathOr(state, [action.type], {\n      [REQUEST]: {\n        data: null,\n        error: '',\n        pending: true,\n        request: pathOr(null, ['meta'], action),\n      },\n      [SUCCESS]: {\n        ...state,\n        pending: false,\n        data: pathOr(null, ['payload'], action),\n      },\n      [FAILED]: {\n        ...state,\n        pending: false,\n        error: pathOr('Unknown Error', ['error'], action),\n      },\n      ...(customEventsHandler\n        ? customEventsHandler(state, action, DEFAULT_STATE)\n        : {}),\n    });\n  };\n};\n","import { LoginMeta, LoginPayload } from 'types/store/LoginState';\nimport { createAsyncAction } from 'utils/Redux';\n\nconst ns = 'LOGIN';\nconst asyncAction = createAsyncAction<LoginMeta, LoginPayload>(ns);\n\nconst loginActions = {\n  ...asyncAction,\n};\n\nexport default loginActions;\n","import pathOr from 'ramda/es/pathOr';\nimport { Action } from 'types/Action';\nimport { AuthState } from 'types/store/AuthState';\n\nimport { authActions } from '../actions';\n\nconst DEFAULT_STATE: AuthState = {\n  token: null,\n};\n\nconst DEFAULT_ACTION: Action<AuthState> = {\n  type: '',\n  payload: {\n    token: null,\n  },\n};\n\nexport default (state = DEFAULT_STATE, action = DEFAULT_ACTION) => {\n  return pathOr(state, [action.type], {\n    [authActions.UPDATE]: {\n      ...state,\n      ...action.payload,\n    },\n    [authActions.CLEAR]: {},\n  });\n};\n","import { LoginMeta, LoginPayload } from 'types/store/LoginState';\nimport { createAsyncReducer } from 'utils/Redux';\n\nimport { loginActions } from '../actions';\n\nexport default createAsyncReducer<LoginMeta, LoginPayload>(loginActions);\n","import { combineReducers } from 'redux';\n\nimport auth from './auth';\nimport login from './login';\n\nexport default combineReducers({\n  auth,\n  login,\n});\n","import { applyMiddleware, createStore, Store } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { persistReducer, persistStore, Persistor } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createSagaMiddleware from 'redux-saga';\nimport reducers from 'store/reducers';\n\nconst isDevMode =\n  !process.env.NODE_ENV || process.env.NODE_ENV === 'development';\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['auth', 'history'],\n};\n\nconst reducer = persistReducer(persistConfig, reducers);\nexport const sagaMiddleware = createSagaMiddleware();\n\nconst enhancer = applyMiddleware(sagaMiddleware);\n\nexport const store: Store<any, any> = createStore(\n  reducer,\n  isDevMode ? composeWithDevTools(enhancer) : enhancer\n);\n\nexport const persistor = (callback?: () => void): Persistor =>\n  persistStore(store, undefined, callback);\n\nexport default store;\n","export const API = {\n  URL: process.env.REACT_APP_API_URL || 'http://localhost:3000',\n  VERSION: process.env.REACT_APP_API_VERSION || 'v1',\n};\n","import { Buffer } from 'buffer';\n\nimport { LoginMeta } from 'types/store/LoginState';\n\nfunction encodeBase64(str: string) {\n  return Buffer.from(str).toString('base64');\n}\n\nexport function createBasicToken(credentials: LoginMeta): string {\n  return `Basic ${encodeBase64(\n    `${credentials.email}:${credentials.password}`\n  )}`;\n}\n","import axios from 'axios';\nimport { API } from 'consts';\nimport { LoginMeta } from 'types/store/LoginState';\nimport { createBasicToken } from 'utils/Token';\n\nconst BASE_URL = `${API.URL}/${API.VERSION}`;\nconst AUTH_URL = `${BASE_URL}/auth`;\n\nexport const login = (data: LoginMeta) => {\n  return axios({\n    method: 'post',\n    url: `${AUTH_URL}/login`,\n    headers: {\n      Authorization: createBasicToken(data),\n    },\n    data: {},\n  });\n};\n","import { put, call, takeLatest } from 'redux-saga/effects';\nimport { login } from 'services/auth';\nimport { AsyncAction } from 'types/Action';\nimport { LoginMeta, LoginPayload } from 'types/store/LoginState';\n\nimport { loginActions } from '../actions';\n\nfunction* loginRequest(action: AsyncAction<LoginMeta, LoginPayload>) {\n  try {\n    const { data } = yield call(login, action.meta);\n    yield put(loginActions.success(data));\n  } catch (e) {\n    yield put(loginActions.failed(e.message));\n  }\n}\n\nfunction* loginSuccess(action: AsyncAction<LoginMeta, LoginPayload>) {\n  // do something when request was completed\n}\n\nfunction* loginFailed(action: AsyncAction<LoginMeta, LoginPayload>) {\n  // do something when requet failed\n}\n\nfunction* loginWatcher() {\n  yield takeLatest(loginActions.REQUEST, loginRequest);\n  yield takeLatest(loginActions.SUCCESS, loginSuccess);\n  yield takeLatest(loginActions.FAILED, loginFailed);\n}\n\nexport default loginWatcher;\n","import { fork, all } from 'redux-saga/effects';\n\nimport login from './login';\n\nconst sagas = [login];\n\nexport default function* root() {\n  yield all(sagas.map(fork));\n}\n","import i18next from 'i18next';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport { initReactI18next } from 'react-i18next';\nimport { ConvertedToObjectType } from 'types/Locale';\n\nimport en from './en/translation.json';\n\n// Add json translations here\nconst translationsJson = {\n  en: {\n    translation: en,\n  },\n};\n\nexport type TranslationResource = typeof en;\nexport type LanguageKey = keyof TranslationResource;\n\nexport const translations: ConvertedToObjectType<TranslationResource> = {} as any;\n\n/*\n * Converts the static JSON file into an object where keys are identical\n * but values are strings concatenated according to syntax.\n * This is helpful when using the JSON file keys and still have the intellisense support\n * along with type-safety\n */\nconst convertLanguageJsonToObject = (obj: any, dict: any, current?: string) => {\n  Object.keys(obj).forEach((key) => {\n    const currentLookupKey = current ? `${current}.${key}` : key;\n    if (typeof obj[key] === 'object') {\n      dict[key] = {};\n      convertLanguageJsonToObject(obj[key], dict[key], currentLookupKey);\n    } else {\n      dict[key] = currentLookupKey;\n    }\n  });\n};\n\nexport const i18n = i18next\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init(\n    {\n      resources: translationsJson,\n      lng: 'en',\n      debug: process.env.NODE_ENV !== 'production',\n    },\n    () => {\n      convertLanguageJsonToObject(en, translations);\n    }\n  );\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\n\nimport { ThemeProvider } from 'emotion-theming';\nimport ReactDOM from 'react-dom';\nimport { Provider as ReduxProvider } from 'react-redux';\nimport { HashRouter as Router } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport Routes from 'routes';\nimport { store, persistor, sagaMiddleware } from 'store';\nimport sagas from 'store/sagas';\nimport theme from 'utils/Theme';\n\n// Initialize languages\nimport './locales/i18n';\n\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\n// create the saga middleware\nsagaMiddleware.run(sagas);\n\nconst App = () => {\n  const onRehydate = async () => {\n    // Do something after loading state\n  };\n  return (\n    <React.StrictMode>\n      <ReduxProvider store={store}>\n        <PersistGate loading={null} persistor={persistor(onRehydate)}>\n          <Router>\n            <ThemeProvider theme={theme}>\n              <Routes />\n            </ThemeProvider>\n          </Router>\n        </PersistGate>\n      </ReduxProvider>\n    </React.StrictMode>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}